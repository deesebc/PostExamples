# https://es.quarkus.io/guides/config-reference

#by default 8080
#quarkus.http.port=8085

# Panache conf
# production datasource configuration
%prod.quarkus.datasource.username = myusername
%prod.quarkus.datasource.password = mypassword
%prod.quarkus.datasource.reactive.url = jdbc:postgresql://localhost:5432/mydatabase
%prod.quarkus.hibernate-orm.sql-load-script = no-file

# development datasource configuration
%dev.quarkus.datasource.username = reader
%dev.quarkus.datasource.password = password
#Warning: we change from datasource.jdbc.url to datasource.reactive.url
#Warning: we also modify url. from 'jdbc:mysql:...' to 'vertx-reactive:mysql:...'
%dev.quarkus.datasource.reactive.url = vertx-reactive:mysql://localhost:3306/library?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
#The file is retrieved from the classpath resources, so it must be located in the resources directory (e.g. src/main/resources)
%dev.quarkus.hibernate-orm.sql-load-script = META-INF/import-dev.sql
%dev.quarkus.hibernate-orm.database.generation = update
#If we select database.generation, load-script only generate rorws, for DDL use create-target
%dev.quarkus.hibernate-orm.scripts.generation.create-target = META-INF/ddl.sql
%dev.quarkus.hibernate-orm.scripts.generation.drop-target = META-INF/drop.sql
#%dev.quarkus.datasource.devservices.image-name = quay.io/example/postgres:14.1

# if we dont put %test. Quarkus will launch a testcontainer
%test.quarkus.datasource.username = reader
%test.quarkus.datasource.password = password
%test.quarkus.datasource.reactive.url = jdbc:mysql://localhost:3306/library?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false